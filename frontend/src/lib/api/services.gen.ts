// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { RegisterDataArtifactDataArtifactsPostData, RegisterDataArtifactDataArtifactsPostError, RegisterDataArtifactDataArtifactsPostResponse, GetArtifactsDataArtifactsGetError, GetArtifactsDataArtifactsGetResponse, GetArtifactsForGlobalViewDataArtifactsGlobalGetError, GetArtifactsForGlobalViewDataArtifactsGlobalGetResponse, GetArtifactByNameDataArtifactsNameGetData, GetArtifactByNameDataArtifactsNameGetError, GetArtifactByNameDataArtifactsNameGetResponse, GetArtifactsByPipelineDataArtifactsPipelinePipelineNameGetData, GetArtifactsByPipelineDataArtifactsPipelinePipelineNameGetError, GetArtifactsByPipelineDataArtifactsPipelinePipelineNameGetResponse, GetNeighborsDataArtifactsNeighborsNameGetData, GetNeighborsDataArtifactsNeighborsNameGetError, GetNeighborsDataArtifactsNeighborsNameGetResponse, GetPipelinesPipelinesGetError, GetPipelinesPipelinesGetResponse, GetPipelinesByArtifactPipelinesArtifactNameGetData, GetPipelinesByArtifactPipelinesArtifactNameGetError, GetPipelinesByArtifactPipelinesArtifactNameGetResponse, GetConnectionsByPipelineConnectionsPipelinePipelineNameGetData, GetConnectionsByPipelineConnectionsPipelinePipelineNameGetError, GetConnectionsByPipelineConnectionsPipelinePipelineNameGetResponse, CreateConnectionConnectionsCreatePostData, CreateConnectionConnectionsCreatePostError, CreateConnectionConnectionsCreatePostResponse, GetConnectionsConnectionsGetError, GetConnectionsConnectionsGetResponse, RegisterCodeArtifactCodeArtifactsPostData, RegisterCodeArtifactCodeArtifactsPostError, RegisterCodeArtifactCodeArtifactsPostResponse, RegisterModelArtifactModelArtifactsPostData, RegisterModelArtifactModelArtifactsPostError, RegisterModelArtifactModelArtifactsPostResponse, RegisterHyperparametersArtifactHyperparametersArtifactsPostData, RegisterHyperparametersArtifactHyperparametersArtifactsPostError, RegisterHyperparametersArtifactHyperparametersArtifactsPostResponse, RegisterParametersArtifactParametersArtifactsPostData, RegisterParametersArtifactParametersArtifactsPostError, RegisterParametersArtifactParametersArtifactsPostResponse, RegisterResultsArtifactResultsArtifactsPostData, RegisterResultsArtifactResultsArtifactsPostError, RegisterResultsArtifactResultsArtifactsPostResponse, GetResultsArtifactsByPipelineResultsArtifactsPipelinePipelineNameGetData, GetResultsArtifactsByPipelineResultsArtifactsPipelinePipelineNameGetError, GetResultsArtifactsByPipelineResultsArtifactsPipelinePipelineNameGetResponse, RootGetError, RootGetResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Register Data Artifact
 * Register a data artifact. Currently supported: Free-form and pd.DataFrame data artifacts.
 */
export const registerDataArtifactDataArtifactsPost = <ThrowOnError extends boolean = false>(options: Options<RegisterDataArtifactDataArtifactsPostData, ThrowOnError>) => { return (options?.client ?? client).post<RegisterDataArtifactDataArtifactsPostResponse, RegisterDataArtifactDataArtifactsPostError, ThrowOnError>({
    ...options,
    url: '/data-artifacts/'
}); };

/**
 * Get Artifacts
 * Get all artifacts from the DocumentDB
 */
export const getArtifactsDataArtifactsGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetArtifactsDataArtifactsGetResponse, GetArtifactsDataArtifactsGetError, ThrowOnError>({
    ...options,
    url: '/data-artifacts/'
}); };

/**
 * Get Artifacts For Global View
 * Get all artifacts from the DAG DB for global view
 */
export const getArtifactsForGlobalViewDataArtifactsGlobalGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetArtifactsForGlobalViewDataArtifactsGlobalGetResponse, GetArtifactsForGlobalViewDataArtifactsGlobalGetError, ThrowOnError>({
    ...options,
    url: '/data-artifacts/global'
}); };

/**
 * Get Artifact By Name
 * Get a single data artifact by name
 */
export const getArtifactByNameDataArtifactsNameGet = <ThrowOnError extends boolean = false>(options: Options<GetArtifactByNameDataArtifactsNameGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetArtifactByNameDataArtifactsNameGetResponse, GetArtifactByNameDataArtifactsNameGetError, ThrowOnError>({
    ...options,
    url: '/data-artifacts/{name}'
}); };

/**
 * Get Artifacts By Pipeline
 * Get all artifacts in a pipeline
 */
export const getArtifactsByPipelineDataArtifactsPipelinePipelineNameGet = <ThrowOnError extends boolean = false>(options: Options<GetArtifactsByPipelineDataArtifactsPipelinePipelineNameGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetArtifactsByPipelineDataArtifactsPipelinePipelineNameGetResponse, GetArtifactsByPipelineDataArtifactsPipelinePipelineNameGetError, ThrowOnError>({
    ...options,
    url: '/data-artifacts/pipeline/{pipeline_name}'
}); };

/**
 * Get Neighbors
 * Get all neighbors (in any pipeline) of an artifact by artifact name
 */
export const getNeighborsDataArtifactsNeighborsNameGet = <ThrowOnError extends boolean = false>(options: Options<GetNeighborsDataArtifactsNeighborsNameGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetNeighborsDataArtifactsNeighborsNameGetResponse, GetNeighborsDataArtifactsNeighborsNameGetError, ThrowOnError>({
    ...options,
    url: '/data-artifacts/neighbors/{name}'
}); };

/**
 * Get Pipelines
 * Get all pipelines in the DAG database.
 */
export const getPipelinesPipelinesGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetPipelinesPipelinesGetResponse, GetPipelinesPipelinesGetError, ThrowOnError>({
    ...options,
    url: '/pipelines/'
}); };

/**
 * Get Pipelines By Artifact
 * Get all pipelines in the DAG database that contain a specific artifact.
 */
export const getPipelinesByArtifactPipelinesArtifactNameGet = <ThrowOnError extends boolean = false>(options: Options<GetPipelinesByArtifactPipelinesArtifactNameGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetPipelinesByArtifactPipelinesArtifactNameGetResponse, GetPipelinesByArtifactPipelinesArtifactNameGetError, ThrowOnError>({
    ...options,
    url: '/pipelines/{artifact_name}'
}); };

/**
 * Get Connections By Pipeline
 * Get all connections in a pipeline
 */
export const getConnectionsByPipelineConnectionsPipelinePipelineNameGet = <ThrowOnError extends boolean = false>(options: Options<GetConnectionsByPipelineConnectionsPipelinePipelineNameGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetConnectionsByPipelineConnectionsPipelinePipelineNameGetResponse, GetConnectionsByPipelineConnectionsPipelinePipelineNameGetError, ThrowOnError>({
    ...options,
    url: '/connections/pipeline/{pipeline_name}'
}); };

/**
 * Create Connection
 * Create a connection between two artifacts in a pipeline
 */
export const createConnectionConnectionsCreatePost = <ThrowOnError extends boolean = false>(options: Options<CreateConnectionConnectionsCreatePostData, ThrowOnError>) => { return (options?.client ?? client).post<CreateConnectionConnectionsCreatePostResponse, CreateConnectionConnectionsCreatePostError, ThrowOnError>({
    ...options,
    url: '/connections/create'
}); };

/**
 * Get Connections
 * Get all connections
 */
export const getConnectionsConnectionsGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetConnectionsConnectionsGetResponse, GetConnectionsConnectionsGetError, ThrowOnError>({
    ...options,
    url: '/connections/'
}); };

/**
 * Register Code Artifact
 * Register a code artifact.
 */
export const registerCodeArtifactCodeArtifactsPost = <ThrowOnError extends boolean = false>(options: Options<RegisterCodeArtifactCodeArtifactsPostData, ThrowOnError>) => { return (options?.client ?? client).post<RegisterCodeArtifactCodeArtifactsPostResponse, RegisterCodeArtifactCodeArtifactsPostError, ThrowOnError>({
    ...options,
    url: '/code-artifacts/'
}); };

/**
 * Register Model Artifact
 * Register a model artifact.
 */
export const registerModelArtifactModelArtifactsPost = <ThrowOnError extends boolean = false>(options: Options<RegisterModelArtifactModelArtifactsPostData, ThrowOnError>) => { return (options?.client ?? client).post<RegisterModelArtifactModelArtifactsPostResponse, RegisterModelArtifactModelArtifactsPostError, ThrowOnError>({
    ...options,
    url: '/model-artifacts/'
}); };

/**
 * Register Hyperparameters Artifact
 * Register a hyperparameters artifact.
 */
export const registerHyperparametersArtifactHyperparametersArtifactsPost = <ThrowOnError extends boolean = false>(options: Options<RegisterHyperparametersArtifactHyperparametersArtifactsPostData, ThrowOnError>) => { return (options?.client ?? client).post<RegisterHyperparametersArtifactHyperparametersArtifactsPostResponse, RegisterHyperparametersArtifactHyperparametersArtifactsPostError, ThrowOnError>({
    ...options,
    url: '/hyperparameters-artifacts/'
}); };

/**
 * Register Parameters Artifact
 * Register a parameters artifact.
 */
export const registerParametersArtifactParametersArtifactsPost = <ThrowOnError extends boolean = false>(options: Options<RegisterParametersArtifactParametersArtifactsPostData, ThrowOnError>) => { return (options?.client ?? client).post<RegisterParametersArtifactParametersArtifactsPostResponse, RegisterParametersArtifactParametersArtifactsPostError, ThrowOnError>({
    ...options,
    url: '/parameters-artifacts/'
}); };

/**
 * Register Results Artifact
 * Register a hyperparameters artifact.
 */
export const registerResultsArtifactResultsArtifactsPost = <ThrowOnError extends boolean = false>(options: Options<RegisterResultsArtifactResultsArtifactsPostData, ThrowOnError>) => { return (options?.client ?? client).post<RegisterResultsArtifactResultsArtifactsPostResponse, RegisterResultsArtifactResultsArtifactsPostError, ThrowOnError>({
    ...options,
    url: '/results-artifacts/'
}); };

/**
 * Get Results Artifacts By Pipeline
 * Get all results artifacts in a pipeline
 */
export const getResultsArtifactsByPipelineResultsArtifactsPipelinePipelineNameGet = <ThrowOnError extends boolean = false>(options: Options<GetResultsArtifactsByPipelineResultsArtifactsPipelinePipelineNameGetData, ThrowOnError>) => { return (options?.client ?? client).get<GetResultsArtifactsByPipelineResultsArtifactsPipelinePipelineNameGetResponse, GetResultsArtifactsByPipelineResultsArtifactsPipelinePipelineNameGetError, ThrowOnError>({
    ...options,
    url: '/results-artifacts/pipeline/{pipeline_name}'
}); };

/**
 * Root
 * Base route with welcome message.
 */
export const rootGet = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<RootGetResponse, RootGetError, ThrowOnError>({
    ...options,
    url: '/'
}); };